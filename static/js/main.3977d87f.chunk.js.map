{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeleteCardPopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","type","aria-label","length","Main","onEditProfile","onEditAvatar","onAddPlace","cards","style","backgroundImage","avatar","about","map","key","Footer","ImagePopup","onClose","api","baseUrl","headers","this","url","fetch","authorization","then","res","_getResponseData","method","body","JSON","stringify","cardId","ok","json","Promise","reject","Error","status","PopupWithForm","title","isOpen","onSubmit","children","action","noValidate","EditProfilePopup","onUpdateUser","isLoading","useState","formValues","setFormValues","dirty","setDirty","required","minLength","maxLength","errors","setErrors","useEffect","validators","value","nameValidationResult","Object","keys","errorKey","errorResult","reduce","acc","el","aboutValidationResult","handleInputChange","useCallback","e","target","prevState","isNameInvalid","values","Boolean","isAboutInvalid","isSubmitDisabled","preventDefault","onChange","placeholder","disabled","EditAvatarPopup","onUpdateAvatar","setLink","isLink","test","linkValidationResult","AddPlacePopup","isLinkInvalid","ConfirmDeleteCardPopup","onSubmitClick","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setCard","setLoading","closeAllPopups","all","getUserInfo","getInitialCards","userData","initialCards","catch","err","console","log","Provider","changeLikeCardStatus","newCard","newCards","c","patchUserInfo","finally","postNewCard","patchAvatar","deleteCard","filter","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.3977d87f.chunk.js","sourcesContent":["import logo from \"../images/logo.svg\";\nimport React from \"react\";\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={logo} alt=\"Логотип\" />\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\n\nexport const CurrentUserContext = React.createContext({})\n","import React from 'react'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\n\nfunction Card ({ card, onCardClick, onCardLike, onCardDelete }) {\n    const currentUser = React.useContext(CurrentUserContext)\n\n    function handleClick() {\n        onCardClick(card)\n    }\n\n    function handleLikeClick() {\n        onCardLike(card)\n    }\n\n    function handleDeleteClick() {\n        onCardDelete(card)\n    }\n\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id\n\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n        `place__button-delete transition ${isOwn ? 'place__button-delete_visible' : 'place__button-delete_hidden'}`\n    )\n\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id)\n\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = (\n        `place__button-like transition ${isLiked && 'place__button-like_active'}`\n    )\n\n    return (\n        <li className=\"place\">\n            <img className=\"place__image\" src={ card.link } alt={ card.name } onClick={ handleClick } />\n            <button className={ cardDeleteButtonClassName } type=\"button\" aria-label=\"Удалить\" onClick={ handleDeleteClick } />\n            <div className=\"place__description\">\n                <h2 className=\"place__name\">{ card.name }</h2>\n                <div className=\"place__likes-container\">\n                    <button className={ cardLikeButtonClassName } type=\"button\" aria-label=\"Нравится\" onClick={ handleLikeClick } />\n                    <p className=\"place__likes\">{ card.likes.length > 0 ? card.likes.length : '' }</p>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card.js'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\n\nfunction Main ({ onEditProfile, onEditAvatar, onAddPlace, onCardClick, cards, onCardLike, onCardDelete }) {\n\n    const currentUser = React.useContext(CurrentUserContext)\n\n    return (\n        <main>\n            <section className=\"profile indent\">\n                <div className=\"profile__user\">\n                    <div className=\"profile__avatar transition\" style={{ backgroundImage: `url(${ currentUser.avatar })` }}>\n                        <button className=\"profile__edit-avatar-button\" onClick={ onEditAvatar }/>\n                    </div>\n                    <div className=\"profile__info\">\n                        <div className=\"profile__container\">\n                            <h1 className=\"profile__name\">{ currentUser.name }</h1>\n                            <button className=\"profile__edit-button transition\" type=\"button\" aria-label=\"Редактировать\" onClick={ onEditProfile } />\n                        </div>\n                        <p className=\"profile__description\">{ currentUser.about }</p>\n                    </div>\n                </div>\n                <button className=\"profile__add-button transition\" type=\"button\" aria-label=\"Добавить фото\" onClick={ onAddPlace } />\n            </section>\n            <section className=\"places indent\">\n                <ul className=\"places__list\">\n                    {cards.map((card) => (\n                            <Card\n                                key={ card._id }\n                                card={ card }\n                                onCardClick={ onCardClick }\n                                onCardLike={ onCardLike }\n                                onCardDelete={ onCardDelete } />\n                        )\n                    )}\n                </ul>\n            </section>\n        </main>\n    )\n\n}\n\nexport default Main","import React from \"react\";\n\nfunction Footer () {\n    return (\n        <footer className=\"footer indent\">\n            <p className=\"footer__copyright\">&copy; 2020. Катя Иванова</p>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\n\nfunction ImagePopup ({ card, onClose }) {\n    if (!card) { return null }\n    else {\n        return (\n            <section className=\"popup popup_image popup_opened\" onClick={ onClose }>\n                <div className=\"popup__image-container\">\n                    <button className=\"popup__close transition\" type=\"button\" aria-label=\"Закрыть\"\n                            onClick={ onClose }/>\n                    <figure className=\"popup__image-figure\">\n                        <img className=\"popup__image\" src={ card.link } alt={ card.name }/>\n                        <figcaption className=\"popup__image-name\">{ card.name }</figcaption>\n                    </figure>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default ImagePopup","class Api {\n  constructor({ baseUrl, headers }) {\n    this.url = baseUrl\n    this.headers = headers\n  }\n\n  getInitialCards() {\n    return fetch(`${this.url}/cards`, {\n      headers: {\n        authorization: this.headers.authorization\n      }\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      headers: {\n        authorization: this.headers.authorization\n      }\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  patchUserInfo(name, about) {\n    return fetch(`${this.url}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  postNewCard(name, link) {\n    return fetch(`${this.url}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n      method: `${ isLiked ? 'PUT' : 'DELETE' }`,\n      headers: {\n        authorization: this.headers.authorization\n      }\n    })\n        .then(res => this._getResponseData(res))\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this.headers.authorization\n      }\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  patchAvatar(avatar) {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`))\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  headers: {\n    authorization: '529addb6-4b69-4a92-a5e5-18a2a45d6cf3',\n    'Content-Type': 'application/json'\n  }\n})\n\nexport default api","import React from 'react'\n\nfunction PopupWithForm ({ name, title, isOpen, onClose, onSubmit, children }) {\n    return (\n        <section className={ `popup popup_${ name } ${ isOpen && 'popup_opened' }` } >\n            <div className=\"popup__container\">\n                <button className=\"popup__close transition\" type=\"button\" aria-label=\"Закрыть\" onClick={ onClose } />\n                <h2 className=\"popup__title\">{ title }</h2>\n                <form className=\"popup__form popup__form_info\" name={ name } method=\"get\" action=\"#\" onSubmit={ onSubmit } noValidate>\n                    { children }\n                </form>\n            </div>\n        </section>\n    )\n}\n\nexport default PopupWithForm","import PopupWithForm from './PopupWithForm.js'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\nimport React from 'react'\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoading }) {\n    const [ formValues, setFormValues ] = React.useState({\n        name: \"\",\n        about: \"\"\n    })\n\n    const [dirty, setDirty] = React.useState({\n        name: false,\n        about: false\n    })\n\n    // Стартовое состояние ошибок\n    const [errors, setErrors] = React.useState({\n        name: {\n            required: true,\n            minLength: true,\n            maxLength: true\n        },\n        about: {\n            required: true,\n            minLength: true,\n            maxLength: true\n        }\n    })\n\n    const currentUser = React.useContext(CurrentUserContext)\n\n    // Заполнение инпутов и очистка ошибок\n    React.useEffect(() => {\n        setFormValues(currentUser)\n        setDirty({\n            name: false,\n            about: false\n        })\n    }, [currentUser, isOpen])\n\n    // Условия валидации\n    const validators = {\n        name: {\n            required: (value) => {\n                return value === \"\"\n            },\n            minLength: (value) => {\n                return value.length < 2 && value !== \"\"\n            },\n            maxLength: (value) => {\n                return value.length > 40\n            }\n        },\n        about: {\n            required: (value) => {\n                return value === \"\"\n            },\n            minLength: (value) => {\n                return value.length < 2 && value !== \"\"\n            },\n            maxLength: (value) => {\n                return value.length > 200\n            }\n        }\n    }\n\n    // Валидация\n    React.useEffect(\n        function validateInputs() {\n            const { name, about } = formValues\n\n            const nameValidationResult = Object.keys(validators.name)\n                .map((errorKey) => {\n                    const errorResult = validators.name[errorKey](name)\n\n                    return { [errorKey]: errorResult }\n                })\n                .reduce((acc, el) => ({ ...acc, ...el }), {})\n\n            const aboutValidationResult = Object.keys(validators.about)\n                .map((errorKey) => {\n                    const errorResult = validators.about[errorKey](about)\n\n                    return { [errorKey]: errorResult }\n                })\n                .reduce((acc, el) => ({ ...acc, ...el }), {})\n\n            setErrors({\n                name: nameValidationResult,\n                about: aboutValidationResult\n            })\n        },\n        // eslint-disable-next-line\n        [formValues, setErrors]\n    )\n\n    const handleInputChange = React.useCallback(\n        (e) => {\n            const { name, value } = e.target\n            setFormValues((prevState) => ({ ...prevState, [name]: value }))\n            setDirty((prevState) => ({...prevState, [name]: true}))\n        },\n        [setFormValues]\n    )\n\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault()\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        onUpdateUser({\n            name,\n            about,\n        })\n    }\n\n    const { name, about } = formValues\n    const isNameInvalid = Object.values(errors.name).some(Boolean)\n    const isAboutInvalid = Object.values(errors.about).some(Boolean)\n    const isSubmitDisabled = isNameInvalid || isAboutInvalid\n\n\n    return(\n        <PopupWithForm name=\"info\" title=\"Редактировать профиль\" isOpen={ isOpen } onClose={ onClose } onSubmit={ handleSubmit } >\n            <>\n                <label className=\"popup__form-field\">\n                    <input onChange={ handleInputChange } value={ name } className=\"popup__input\" type=\"text\" name=\"name\"\n                           placeholder=\"Имя\" />\n                    {dirty.name && errors.name.required && <span className=\"popup__input-error\">Заполните это поле</span>}\n                    {errors.name.minLength && <span className=\"popup__input-error\">Символов должно быть минимум 2</span>}\n                    {errors.name.maxLength && <span className=\"popup__input-error\">Символов должно быть максимум 40</span>}\n                </label>\n                <label className=\"popup__form-field\">\n                    <input onChange={ handleInputChange } value={ about } className=\"popup__input\" type=\"text\"\n                           name=\"about\" placeholder=\"О себе\" />\n                    {dirty.about && errors.about.required && <span className=\"popup__input-error\">Заполните это поле</span>}\n                    {errors.about.minLength && <span className=\"popup__input-error\">Символов должно быть минимум 2</span>}\n                    {errors.about.maxLength && <span className=\"popup__input-error\">Символов должно быть максимум 200</span>}\n                </label>\n                <button className=\"popup__button popup__button_type_info\" type=\"submit\" disabled={ isSubmitDisabled } >\n                    { isLoading ? 'Загрузка...' : 'Сохранить' }\n                </button>\n            </>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup","import PopupWithForm from './PopupWithForm.js'\nimport React from 'react'\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, isLoading }) {\n\n    const [link, setLink] = React.useState(\"\")\n\n    const [dirty, setDirty] = React.useState(false)\n\n    // Стартовое состояние ошибок\n    const [errors, setErrors] = React.useState({\n        link: {\n            required: true,\n            isLink: true,\n        }\n    })\n\n    // Обнуление инпутов формы\n    React.useEffect(() => {\n        setLink(\"\")\n        setDirty(false)\n    }, [isOpen])\n\n    // Условия валидации\n    const validators = {\n        link: {\n            required: (value) => {\n                return value === \"\"\n            },\n            isLink: (url) => {\n                return !/^(http|https):\\/\\/[^ \"]+$/.test(url) && url !== \"\"\n            }\n        }\n    }\n\n    // Валидация\n    React.useEffect(\n        function validateInputs() {\n            const linkValidationResult = Object.keys(validators.link)\n                .map((errorKey) => {\n                    const errorResult = validators.link[errorKey](link)\n\n                    return { [errorKey]: errorResult }\n                })\n                .reduce((acc, el) => ({ ...acc, ...el }), {})\n\n            setErrors({\n                link: linkValidationResult,\n            })\n        },\n        // eslint-disable-next-line\n        [link, setErrors]\n    )\n\n    const handleInputChange = React.useCallback(\n        (e) => {\n            setLink(e.target.value)\n            setDirty(true)\n        },\n        [setLink]\n    )\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        onUpdateAvatar({\n            avatar: link,\n        })\n    }\n\n    const isSubmitDisabled = Object.values(errors.link).some(Boolean)\n\n    return(\n        <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" isOpen={ isOpen } onClose={ onClose } onSubmit={ handleSubmit }>\n            <>\n                <label className=\"popup__form-field\">\n                    <input onChange={ handleInputChange } value={ link } className=\"popup__input\" type=\"url\" name=\"avatar\" placeholder=\"Ссылка на аватар\" />\n                    {dirty && errors.link.required && <span className=\"popup__input-error\">Заполните это поле</span>}\n                    {errors.link.isLink && <span className=\"popup__input-error\">Введите URL-адрес</span>}\n                </label>\n                <button className=\"popup__button popup__button_type_avatar\" type=\"submit\" disabled={ isSubmitDisabled }>\n                    { isLoading ? 'Загрузка...' : 'Сохранить' }\n                </button>\n            </>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup","import PopupWithForm from './PopupWithForm.js'\nimport React from 'react'\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isLoading }) {\n\n    const [ formValues, setFormValues ] = React.useState({\n        name: \"\",\n        link: \"\"\n    })\n\n    const [dirty, setDirty] = React.useState({\n        name: false,\n        link: false\n    })\n\n    // Стартовое состояние ошибок\n    const [errors, setErrors] = React.useState({\n        name: {\n            required: true,\n            minLength: true,\n            maxLength: true\n        },\n        link: {\n            required: true,\n            isLink: true\n        }\n    })\n\n    // Заполнение полей формы и очистка ошибок при открытии попапа\n    React.useEffect(() => {\n        setFormValues({\n            name: \"\",\n            link: \"\"\n        })\n        setDirty({\n            name: false,\n            link: false\n        })\n    }, [isOpen])\n\n    // Условия валидации\n    const validators = {\n        name: {\n            required: (value) => {\n                return value === \"\"\n            },\n            maxLength: (value) => {\n                return value.length > 30\n            }\n        },\n        link: {\n            required: (value) => {\n                return value === \"\"\n            },\n            isLink: (value) => {\n                return !/^(http|https):\\/\\/[^ \"]+$/.test(value) && value !== \"\"\n            }\n        }\n    }\n\n    // Валидация\n    React.useEffect(\n        function validateInputs() {\n            const { name, link } = formValues\n\n            const nameValidationResult = Object.keys(validators.name)\n                .map((errorKey) => {\n                    const errorResult = validators.name[errorKey](name)\n\n                    return { [errorKey]: errorResult }\n                })\n                .reduce((acc, el) => ({ ...acc, ...el }), {})\n\n            const linkValidationResult = Object.keys(validators.link)\n                .map((errorKey) => {\n                    const errorResult = validators.link[errorKey](link)\n\n                    return { [errorKey]: errorResult }\n                })\n                .reduce((acc, el) => ({ ...acc, ...el }), {})\n\n            setErrors({\n                name: nameValidationResult,\n                link: linkValidationResult\n            })\n        },\n        // eslint-disable-next-line\n        [formValues, setErrors]\n    )\n\n    const handleInputChange = React.useCallback(\n        (e) => {\n            const { name, value } = e.target\n            setFormValues((prevState) => ({ ...prevState, [name]: value }))\n            setDirty((prevState) => ({...prevState, [name]: true}))\n        },\n        [setFormValues]\n    )\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        onAddPlace({\n            name,\n            link\n            })\n    }\n\n    const { name, link } = formValues\n    const isNameInvalid = Object.values(errors.name).some(Boolean)\n    const isLinkInvalid = Object.values(errors.link).some(Boolean)\n    const isSubmitDisabled = isNameInvalid || isLinkInvalid\n\n    return(\n        <PopupWithForm name=\"place\" title=\"Новое место\" isOpen={ isOpen } onClose={ onClose } onSubmit={ handleSubmit } >\n            <>\n                <label className=\"popup__form-field\">\n                    <input onChange={ handleInputChange } value={ name } className=\"popup__input\" type=\"text\" name=\"name\"\n                           placeholder=\"Название\" />\n                    {dirty.name && errors.name.required && <span className=\"popup__input-error\">Заполните это поле</span>}\n                    {errors.name.maxLength && <span className=\"popup__input-error\">Символов должно быть максимум 30</span>}\n                </label>\n                <label className=\"popup__form-field\">\n                    <input onChange={ handleInputChange } value={ link } className=\"popup__input\" type=\"url\" name=\"link\"\n                           placeholder=\"Ссылка на картинку\" />\n                    {dirty.link && errors.link.required && <span className=\"popup__input-error\">Заполните это поле</span>}\n                    {errors.link.isLink && <span className=\"popup__input-error\">Введите URL-адрес</span>}\n                </label>\n                <button className=\"popup__button popup__button_type_place\" type=\"submit\" disabled={ isSubmitDisabled }>\n                    { isLoading ? 'Загрузка...' : 'Создать' }\n                </button>\n            </>\n        </PopupWithForm>\n    )\n}\n\nexport default AddPlacePopup","import PopupWithForm from './PopupWithForm.js'\nimport React from 'react'\n\nfunction ConfirmDeleteCardPopup({ isOpen, onClose, isLoading, onSubmitClick }) {\n\n    function handleSubmit(e) {\n        onSubmitClick()\n    }\n\n    return (\n        <PopupWithForm name=\"delete-card\" title=\"Вы уверены?\" isOpen={ isOpen } onClose={ onClose }>\n            <button className=\"popup__button popup__button_type_delete\" type=\"button\" onClick={ handleSubmit }>\n                { isLoading ? 'Загрузка...' : 'Да' }\n            </button>\n        </PopupWithForm>\n    )\n}\n\nexport default ConfirmDeleteCardPopup","import React from 'react'\nimport Header from './Header.js'\nimport Main from './Main.js'\nimport Footer from './Footer.js'\nimport ImagePopup from './ImagePopup.js'\nimport api from '../utils/api.js'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\nimport EditProfilePopup from './EditProfilePopup.js'\nimport EditAvatarPopup from './EditAvatarPopup.js'\nimport AddPlacePopup from './AddPlacePopup.js'\nimport ConfirmDeleteCardPopup from './ConfirmDeleteCardPopup.js'\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false)\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false)\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false)\n    const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false)\n    const [selectedCard, setSelectedCard] = React.useState(null)\n    const [currentUser, setCurrentUser] = React.useState(null)\n    const [cards, setCards] = React.useState([])\n    const [card, setCard] = React.useState({})\n    const [isLoading, setLoading] = React.useState(false)\n\n    // Загрузка данных пользователя и карточек с сервера\n    React.useEffect(() => {\n        Promise.all([\n            api.getUserInfo(),\n            api.getInitialCards()\n            ])\n            .then((values) => {\n                const [userData, initialCards] = values\n                setCurrentUser(userData)\n                setCards([...initialCards])\n            })\n            .catch((err) => {\n                console.log(err) // выведем ошибку в консоль\n            })\n    }, [])\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id)\n\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c)\n                // Обновляем стейт\n                setCards(newCards)\n            })\n            .catch((err) => {\n                console.log(err) // выведем ошибку в консоль\n            })\n    }\n\n    function handleCardDelete(card) {\n        setIsConfirmPopupOpen(true)\n        setCard(card)\n    }\n\n    function handleConfirmDelete() {\n        setLoading(true)\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter(c =>\n                    c !== card\n                )\n                setCards(newCards)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err) // выведем ошибку в консоль\n            })\n            .finally(() =>{\n                setLoading(false)\n                })\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true)\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true)\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true)\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false)\n        setIsEditAvatarPopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setIsConfirmPopupOpen(false)\n        setSelectedCard(null)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n    }\n\n    function handleUpdateUser({ name, about }) {\n        setLoading(true)\n        api.patchUserInfo(name, about)\n            .then((res) => {\n                setCurrentUser(res)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err) // выведем ошибку в консоль\n            })\n            .finally(() =>{\n                setLoading(false)\n            })\n    }\n\n    function handleUpdateAvatar({ avatar }) {\n        setLoading(true)\n        api.patchAvatar(avatar)\n            .then((res) => {\n                setCurrentUser(res)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err) // выведем ошибку в консоль\n            })\n            .finally(() =>{\n                setLoading(false)\n            })\n    }\n\n    function handleAddPlace({ name, link }) {\n        setLoading(true)\n        api.postNewCard(name, link)\n            .then((newCard) => {\n                setCards([newCard, ...cards])\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err) // выведем ошибку в консоль\n            })\n            .finally(() =>{\n                setLoading(false)\n            })\n    }\n\n    if (currentUser === null) { return false }\n    else {\n        return (\n            <div className=\"page\">\n                <CurrentUserContext.Provider value={ currentUser }>\n                    <Header />\n                    <Main\n                        onEditProfile={ handleEditProfileClick }\n                        onEditAvatar={ handleEditAvatarClick }\n                        onAddPlace={ handleAddPlaceClick }\n                        onCardClick={ handleCardClick }\n                        cards={ cards }\n                        onCardLike={ handleCardLike }\n                        onCardDelete={ handleCardDelete }\n                    />\n                    <EditProfilePopup\n                        isOpen={ isEditProfilePopupOpen }\n                        onClose={ closeAllPopups }\n                        onUpdateUser={ handleUpdateUser }\n                        isLoading={ isLoading }\n                    />\n                    <AddPlacePopup\n                        isOpen={ isAddPlacePopupOpen }\n                        onClose={ closeAllPopups }\n                        onAddPlace={ handleAddPlace }\n                        isLoading={ isLoading }\n                    />\n                    <EditAvatarPopup\n                        isOpen={ isEditAvatarPopupOpen }\n                        onClose={ closeAllPopups }\n                        onUpdateAvatar={ handleUpdateAvatar }\n                        isLoading={ isLoading }\n                    />\n                    <ImagePopup\n                        card={ selectedCard }\n                        onClose={ closeAllPopups }\n                    />\n                    <ConfirmDeleteCardPopup\n                        isOpen={ isConfirmPopupOpen }\n                        onClose={ closeAllPopups }\n                        isLoading={ isLoading }\n                        onSubmitClick={ handleConfirmDelete }\n                    />\n                    <Footer />\n                </CurrentUserContext.Provider>\n            </div>\n        )\n    }\n\n\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}